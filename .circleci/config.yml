version: 2.0
defaults: &defaults
  machine:
    image: ubuntu-1604:201903-01
env: &env
  environment:
    MODULE_CI_VERSION: v0.29.5
    TERRATEST_LOG_PARSER_VERSION: v0.30.3
    GRUNTWORK_INSTALLER_VERSION: v0.0.30
    TERRAFORM_VERSION: 1.0.3
    TERRAGRUNT_VERSION: NONE
    GO_VERSION: 1.14
jobs:
  test aws:
    <<: *defaults
    <<: *env
    steps:
      - checkout
      - run: &install_gruntwork_tooling
          name: install gruntwork tooling
          command: |
            sudo apt-get -y update
            curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/master/bootstrap-gruntwork-installer.sh | bash /dev/stdin --version "${GRUNTWORK_INSTALLER_VERSION}"
            gruntwork-install --module-name "gruntwork-module-circleci-helpers" --repo "https://github.com/gruntwork-io/terraform-aws-ci" --tag "${MODULE_CI_VERSION}"
            gruntwork-install --binary-name "terratest_log_parser" --repo "https://github.com/gruntwork-io/terratest" --tag "${TERRATEST_LOG_PARSER_VERSION}"
            configure-environment-for-gruntwork-module \
              --go-src-path ./test \
              --go-version ${GO_VERSION} \
              --terragrunt-version "${TERRAGRUNT_VERSION}" \
              --terraform-version "${TERRAFORM_VERSION}"
      # Run pre-commit hooks and fail the build if any hook finds required changes.
      - run:
          name: run precommit
          command: |
            # Oct 26, 2019: Install the last known working version of pre-commit. Also, we have to pin the version of
            # transitive dependencies that are being pulled in which released new versions that are no longer compatible
            # with any python < 3.6.
            pyenv global 3.5.2
            pip install --upgrade "pip < 21.0"
            pip install pre-commit==1.21.0 cfgv==2.0.1 zipp==1.1.0
            go get golang.org/x/tools/cmd/goimports
            export GOPATH=~/go/bin && export PATH=$PATH:$GOPATH
            pre-commit install
            pre-commit run --all-files
      - run:
          # We need to ensure compatibility with both versions of python
          name: run tests (with python2)
          command: |
            mkdir -p /tmp/logs/python2
            echo "Using python 2"
            pyenv global 2.7.12
            python --version
            run-go-tests --path test | tee /tmp/logs/python2/all.log
      - run:
          name: run tests (with python3)
          command: |
            mkdir -p /tmp/logs/python3
            echo "Using python 3"
            pyenv global 3.5.2
            python --version
            # We are rerunning the same test with python3, so clear go test cache
            go clean -testcache
            run-go-tests --path test | tee /tmp/logs/python3/all.log
      - run:
          command: |
            terratest_log_parser --testlog /tmp/logs/python2/all.log --outputdir /tmp/logs/python2
            terratest_log_parser --testlog /tmp/logs/python3/all.log --outputdir /tmp/logs/python3
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs
workflows:
  version: 2
  build-and-test:
    jobs:
      - test aws:
          filters:
            tags:
              only: /^v.*/
          context:
            - Gruntwork Admin
